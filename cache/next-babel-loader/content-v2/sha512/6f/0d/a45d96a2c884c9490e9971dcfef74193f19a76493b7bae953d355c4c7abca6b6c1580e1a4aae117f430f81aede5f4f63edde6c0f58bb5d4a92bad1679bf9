{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport _defineProperty from \"/workspace/deepcase/packages/deep.foundation/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/workspace/deepcase/packages/deep.foundation/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/workspace/deepcase/packages/deep.foundation/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useRef, useState } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport { ButtonBase, makeStyles, Paper } from '@material-ui/core';\n\nvar calc = function calc(x, y, w, h, l, t) {\n  return [-(y - t - h / 2) / 10, (x - l - w / 2) / 10, 1.1];\n};\n\nvar trans = function trans(x, y, s) {\n  return \"perspective(600px) rotateX(\".concat(-x, \"deg) rotateY(\").concat(-y, \"deg) scale(\").concat(s, \")\");\n};\n\nvar useStyles = makeStyles(function () {\n  return {};\n});\nexport function Card(_ref) {\n  var children = _ref.children,\n      disabled = _ref.disabled,\n      animatedProps = _ref.animatedProps,\n      PaperProps = _ref.PaperProps,\n      props = _objectWithoutProperties(_ref, [\"children\", \"disabled\", \"animatedProps\", \"PaperProps\"]);\n\n  var _useState = useState(false),\n      hover = _useState[0],\n      setHover = _useState[1];\n\n  var _useSpring = useSpring(function () {\n    return {\n      xys: [0, 0, 1],\n      config: {\n        mass: 2,\n        tension: 150,\n        friction: 100\n      }\n    };\n  }),\n      _useSpring2 = _slicedToArray(_useSpring, 2),\n      spr = _useSpring2[0],\n      set = _useSpring2[1];\n\n  var rootRef = useRef();\n  return /*#__PURE__*/_jsx(\"div\", _objectSpread(_objectSpread({\n    ref: rootRef\n  }, props), {}, {\n    style: _objectSpread({\n      position: 'relative',\n      height: '100%',\n      width: '100%'\n    }, props === null || props === void 0 ? void 0 : props.style),\n    children: /*#__PURE__*/_jsx(animated.div, _objectSpread(_objectSpread({\n      onMouseMove: function onMouseMove(_ref2) {\n        var clientX = _ref2.clientX,\n            clientY = _ref2.clientY,\n            currentTarget = _ref2.currentTarget;\n        if (disabled) return;\n        var box = rootRef.current.getBoundingClientRect();\n        var x, y;\n        x = clientX - (box === null || box === void 0 ? void 0 : box.x), y = clientY - (box === null || box === void 0 ? void 0 : box.y);\n        set({\n          xys: calc(x, y, currentTarget.offsetWidth, currentTarget.offsetHeight, currentTarget.offsetLeft, currentTarget.offsetTop)\n        });\n        if (!hover) setHover(true);\n      },\n      onMouseLeave: function onMouseLeave() {\n        if (disabled) return;\n        set({\n          xys: [0, 0, 1]\n        });\n        setHover(false);\n      }\n    }, animatedProps), {}, {\n      style: _objectSpread({\n        transform: spr.xys.interpolate(trans),\n        height: '100%',\n        width: '100%'\n      }, animatedProps === null || animatedProps === void 0 ? void 0 : animatedProps.style),\n      children: /*#__PURE__*/_jsx(Paper, _objectSpread(_objectSpread({\n        elevation: hover ? 4 : 1,\n        component: disabled ? 'div' : ButtonBase\n      }, PaperProps), {}, {\n        style: _objectSpread({\n          opacity: disabled ? 0.5 : 1,\n          height: '100%',\n          width: '100%',\n          textAlign: 'left'\n        }, PaperProps === null || PaperProps === void 0 ? void 0 : PaperProps.style),\n        children: children\n      }))\n    }))\n  }));\n}\n;","map":null,"metadata":{},"sourceType":"module"}