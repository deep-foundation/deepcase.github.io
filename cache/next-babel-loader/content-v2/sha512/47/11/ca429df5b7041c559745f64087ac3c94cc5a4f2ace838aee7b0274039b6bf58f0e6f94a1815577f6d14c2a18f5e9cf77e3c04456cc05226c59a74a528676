{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useRef, useState } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport { ButtonBase, makeStyles, Paper } from '@material-ui/core';\n\nconst calc = (x, y, w, h, l, t) => [-(y - t - h / 2) / 10, (x - l - w / 2) / 10, 1.1];\n\nconst trans = (x, y, s) => `perspective(600px) rotateX(${-x}deg) rotateY(${-y}deg) scale(${s})`;\n\nconst useStyles = makeStyles(() => ({}));\nexport function Card(_ref) {\n  let {\n    children,\n    disabled,\n    animatedProps,\n    PaperProps\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"children\", \"disabled\", \"animatedProps\", \"PaperProps\"]);\n\n  const {\n    0: hover,\n    1: setHover\n  } = useState(false);\n  const [spr, set] = useSpring(() => ({\n    xys: [0, 0, 1],\n    config: {\n      mass: 2,\n      tension: 150,\n      friction: 100\n    }\n  }));\n  const rootRef = useRef();\n  return /*#__PURE__*/_jsx(\"div\", _objectSpread(_objectSpread({\n    ref: rootRef\n  }, props), {}, {\n    style: _objectSpread({\n      position: 'relative',\n      height: '100%',\n      width: '100%'\n    }, props === null || props === void 0 ? void 0 : props.style),\n    children: /*#__PURE__*/_jsx(animated.div, _objectSpread(_objectSpread({\n      onMouseMove: ({\n        clientX,\n        clientY,\n        currentTarget\n      }) => {\n        if (disabled) return;\n        const box = rootRef.current.getBoundingClientRect();\n        let x, y;\n        x = clientX - (box === null || box === void 0 ? void 0 : box.x), y = clientY - (box === null || box === void 0 ? void 0 : box.y);\n        set({\n          xys: calc(x, y, currentTarget.offsetWidth, currentTarget.offsetHeight, currentTarget.offsetLeft, currentTarget.offsetTop)\n        });\n        if (!hover) setHover(true);\n      },\n      onMouseLeave: () => {\n        if (disabled) return;\n        set({\n          xys: [0, 0, 1]\n        });\n        setHover(false);\n      }\n    }, animatedProps), {}, {\n      style: _objectSpread({\n        transform: spr.xys.interpolate(trans),\n        height: '100%',\n        width: '100%'\n      }, animatedProps === null || animatedProps === void 0 ? void 0 : animatedProps.style),\n      children: /*#__PURE__*/_jsx(Paper, _objectSpread(_objectSpread({\n        elevation: hover ? 4 : 1,\n        component: disabled ? 'div' : ButtonBase\n      }, PaperProps), {}, {\n        style: _objectSpread({\n          opacity: disabled ? 0.5 : 1,\n          height: '100%',\n          width: '100%',\n          textAlign: 'left'\n        }, PaperProps === null || PaperProps === void 0 ? void 0 : PaperProps.style),\n        children: children\n      }))\n    }))\n  }));\n}\n;","map":null,"metadata":{},"sourceType":"module"}